{"version":3,"sources":["node_modules/@webcomponents/custom-elements/src/native-shim.js"],"names":[],"mappings":";CAgBA,WACA,QAGA,IAAA,OAAA,cACA,IAAA,OAAA,gBAGA,OAAA,eAAA,0BAEA,OAEA,MAAA,EAAA,YACA,OAAA,YAAA,WACA,OAAA,QAAA,UACA,EAAA,GAAA,KAAA,cAEA,YAAA,UAAA,EAAA,UACA,YAAA,UAAA,YAAA,YACA,OAAA,eAAA,YAAA,GAnBA","file":"native-shim.7777f102.js","sourceRoot":"../../packages/demo","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * This shim allows elements written in, or compiled to, ES5 to work on native\n * implementations of Custom Elements v1. It sets new.target to the value of\n * this.constructor so that the native HTMLElement constructor can access the\n * current under-construction element's definition.\n */\n(function() {\n  if (\n    // No Reflect, no classes, no need for shim because native custom elements\n    // require ES2015 classes or Reflect.\n    window.Reflect === undefined ||\n    window.customElements === undefined ||\n    // The webcomponentsjs custom elements polyfill doesn't require\n    // ES2015-compatible construction (`super()` or `Reflect.construct`).\n    window.customElements.polyfillWrapFlushCallback\n  ) {\n    return;\n  }\n  const BuiltInHTMLElement = HTMLElement;\n  window.HTMLElement = /** @this {!Object} */ function HTMLElement() {\n    return Reflect.construct(\n        BuiltInHTMLElement, [], /** @type {!Function} */ (this.constructor));\n  };\n  HTMLElement.prototype = BuiltInHTMLElement.prototype;\n  HTMLElement.prototype.constructor = HTMLElement;\n  Object.setPrototypeOf(HTMLElement, BuiltInHTMLElement);\n})();\n"]}