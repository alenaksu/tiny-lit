import { TemplateInterface } from './types';
export declare function comment(data?: string): Comment;
export declare function text(data?: string): Text;
export declare function isNode(obj: any): boolean;
export declare function replaceRange(newNode: Node, range: any): void;
export declare function removeNodes(startNode: Node, endNode: Node, parent?: Node): void;
export declare function moveTemplate(template: TemplateInterface, after: Node, parent?: Node): void;
export declare function getNodeIndex(node: Node): number;
export declare function getNodePath(node: Node): Array<number>;
export declare function getNodeByPath(node: Node, path: Array<number>): Node;
export declare const TemplateSymbol: unique symbol;
export declare function isTemplateEqual(t1: TemplateInterface, t2: TemplateInterface): boolean;
export declare function isTemplate(obj: any): boolean;
export declare const MARKER_RE: RegExp;
export declare const MARKER_NUMBER_RE: RegExp;
export declare const TEXT_ELEMENT: RegExp;
export declare function markerNumber(marker: string): number;
export declare function getSVGNamespace(attributeName: any): string;
